# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_android-arm
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_android-arm)
  common_config = debug_android-arm
  server_config = debug_android-arm
  client_config = debug_android-arm

else ifeq ($(config),debug_win32)
  common_config = debug_win32
  server_config = debug_win32
  client_config = debug_win32

else ifeq ($(config),debug_win64)
  common_config = debug_win64
  server_config = debug_win64
  client_config = debug_win64

else ifeq ($(config),debug_linux32)
  common_config = debug_linux32
  server_config = debug_linux32
  client_config = debug_linux32

else ifeq ($(config),debug_linux64)
  common_config = debug_linux64
  server_config = debug_linux64
  client_config = debug_linux64

else ifeq ($(config),release_android-arm)
  common_config = release_android-arm
  server_config = release_android-arm
  client_config = release_android-arm

else ifeq ($(config),release_win32)
  common_config = release_win32
  server_config = release_win32
  client_config = release_win32

else ifeq ($(config),release_win64)
  common_config = release_win64
  server_config = release_win64
  client_config = release_win64

else ifeq ($(config),release_linux32)
  common_config = release_linux32
  server_config = release_linux32
  client_config = release_linux32

else ifeq ($(config),release_linux64)
  common_config = release_linux64
  server_config = release_linux64
  client_config = release_linux64

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := common server client

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

common:
ifneq (,$(common_config))
	@echo "==== Building common ($(common_config)) ===="
	@${MAKE} --no-print-directory -C . -f common.make config=$(common_config)
endif

server: common
ifneq (,$(server_config))
	@echo "==== Building server ($(server_config)) ===="
	@${MAKE} --no-print-directory -C . -f server.make config=$(server_config)
endif

client: common
ifneq (,$(client_config))
	@echo "==== Building client ($(client_config)) ===="
	@${MAKE} --no-print-directory -C . -f client.make config=$(client_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f common.make clean
	@${MAKE} --no-print-directory -C . -f server.make clean
	@${MAKE} --no-print-directory -C . -f client.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_android-arm"
	@echo "  debug_win32"
	@echo "  debug_win64"
	@echo "  debug_linux32"
	@echo "  debug_linux64"
	@echo "  release_android-arm"
	@echo "  release_win32"
	@echo "  release_win64"
	@echo "  release_linux32"
	@echo "  release_linux64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   common"
	@echo "   server"
	@echo "   client"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"